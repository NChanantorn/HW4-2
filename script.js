// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
let inventory = JSON.parse(localStorage.getItem("inventory")) || [];

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
function addProduct(productData) {
    productData.id = Date.now().toString(); // ‡∏™‡∏£‡πâ‡∏≤‡∏á ID ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    productData.totalSales = 0; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    inventory.push(productData);
    saveToLocalStorage();
    renderProducts(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á
  }

  document.getElementById("addProductForm").addEventListener("submit", function(event) {
    event.preventDefault();
  
    const newProduct = {
      name: document.getElementById("productName").value,
      price: parseFloat(document.getElementById("productPrice").value),
      stock: parseInt(document.getElementById("productStock").value),
      minStock: parseInt(document.getElementById("productMinStock").value),
      category: document.getElementById("productCategory").value
    };
  
    addProduct(newProduct);
  
    // ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°
    this.reset();
  });
  
  

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function updateStock(productId, quantity) {
  const product = inventory.find(item => item.id === productId);
  if (product) {
    product.stock += quantity;

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ stock ‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î‡∏•‡∏ö
    if (product.stock < 0) {
      alert(`‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ${product.name} ‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏°‡πà‡∏û‡∏≠‡πÉ‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å!`);
      product.stock -= quantity; // ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
    } else {
      // ‡∏´‡∏≤‡∏Å‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÉ‡∏ô totalSales
      if (quantity < 0) {
        product.totalSales += Math.abs(quantity);
      }
    }

    saveToLocalStorage(); // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Local Storage
    renderProducts(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ï‡πà‡∏≥
function checkLowStock() {
    const alertDiv = document.getElementById("lowStockAlert");
    alertDiv.innerHTML = ""; // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Å‡πà‡∏≤
  
    let lowStockItems = inventory.filter(product => product.stock <= product.minStock);
    
    if (lowStockItems.length > 0) {
      alertDiv.innerHTML = "<p>‚ö†Ô∏è ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å:</p><ul>" + 
        lowStockItems.map(item => `<li>${item.name} (‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${item.stock})</li>`).join('') +
        "</ul>";
    }
  }
  

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢
function generateSalesReport() {
  console.log("‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢:");
  inventory.forEach(product => {
    console.log(`${product.name}: ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏° ${product.totalSales}`);
  });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Local Storage
function saveToLocalStorage() {
  localStorage.setItem("inventory", JSON.stringify(inventory));
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Local Storage
function loadFromLocalStorage() {
  inventory = JSON.parse(localStorage.getItem("inventory")) || [];
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
function renderProducts() {
    const tableBody = document.getElementById("productTableBody");
    tableBody.innerHTML = "";
  
    inventory.forEach((product) => {
      const totalRevenue = (product.totalSales || 0) * product.price; // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢
  
      const row = document.createElement("tr");
      row.innerHTML = `
        <td>${product.name}</td>
        <td>${product.price} ‡∏ö‡∏≤‡∏ó</td>
        <td>${product.stock}</td>
        <td>${product.category}</td>
        <td>${product.totalSales || 0} ‡∏ä‡∏¥‡πâ‡∏ô / ${totalRevenue} ‡∏ö‡∏≤‡∏ó</td>
        <td>
          <input type="number" id="sellQty-${product.id}" min="1" placeholder="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô">
          <button class="sell" onclick="sellProduct('${product.id}', parseInt(document.getElementById('sellQty-${product.id}').value))">‡∏Ç‡∏≤‡∏¢</button>
        </td>
        <td>
          <input type="number" id="addQty-${product.id}" min="1" placeholder="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô">
          <button class="add-stock" onclick="addStock('${product.id}', parseInt(document.getElementById('addQty-${product.id}').value))">‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å</button>
        </td>
        <td>
          <button class="delete" onclick="deleteProduct('${product.id}')">üóë ‡∏•‡∏ö</button>
        </td>
      `;
      tableBody.appendChild(row);
    });
  
    checkLowStock();
  }
  
  
  
  
  

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function sellProduct(productId, quantity) {
    const product = inventory.find(item => item.id === productId);
    if (product) {
      if (product.stock >= quantity) {
        product.stock -= quantity;
        product.totalSales += quantity;
        saveToLocalStorage();
        renderProducts();
        checkLowStock();
        generateBestSellers(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ
      } else {
        alert(`‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ${product.name} ‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏°‡πà‡∏û‡∏≠‡πÉ‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å!`);
      }
    }
  }
  
  

  function addStock(productId, quantity) {
    const product = inventory.find(item => item.id === productId);
    if (product) {
      product.stock += quantity;
      saveToLocalStorage();
      renderProducts();
      checkLowStock(); // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ï‡πà‡∏≥
    }
  }

  function generateBestSellers() {
    const bestSellersList = document.getElementById("bestSellersList");
    bestSellersList.innerHTML = ""; // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤
  
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏°‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏°‡∏≤‡∏Å‡πÑ‡∏õ‡∏ô‡πâ‡∏≠‡∏¢
    const sortedProducts = [...inventory].sort((a, b) => (b.totalSales || 0) - (a.totalSales || 0));
  
    sortedProducts.forEach(product => {
      if (product.totalSales > 0) {
        const item = document.createElement("div");
        item.classList.add("best-seller-item");
        item.innerHTML = `
          üèÖ <b>${product.name}</b><br>
          <span>‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß: ${product.totalSales} ‡∏ä‡∏¥‡πâ‡∏ô</span><br>
          <span>‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: ${(product.totalSales * product.price).toLocaleString()} ‡∏ö‡∏≤‡∏ó</span>
        `;
        bestSellersList.appendChild(item);
      }
    });
  
    if (bestSellersList.innerHTML === "") {
      bestSellersList.innerHTML = "<p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ</p>";
    }
  }
  

  function deleteProduct(productId) {
    inventory = inventory.filter(product => product.id !== productId);
    saveToLocalStorage();
    renderProducts();
  }
  
  
  
  
// ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
loadFromLocalStorage();
renderProducts();
